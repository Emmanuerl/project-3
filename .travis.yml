if: branch = master
language: node_js
node_js:
  - 14

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo deployment initiated at `date`
  - docker --version # print the version for logging
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

script:
  - echo Initiating build process for frontend project
  - cd udagram-frontend
  - docker build -t udagram-frontend .; cd ../
  - docker tag udagram-frontend "$DOCKER_USERNAME"/udagram-frontend:latest

  - echo Initiating build process for feeds project
  - cd udagram-api-feeds
  - docker build -t udagram-api-feeds .; cd ../
  - docker tag udagram-api-feeds "$DOCKER_USERNAME"/udagram-api-feeds:latest

  - echo Initiating build process for users project
  - cd udagram-api-users
  - docker build -t udagram-api-users .; cd ../
  - docker tag udagram-api-users "$DOCKER_USERNAME"/udagram-api-users:latest  

  - echo Initiating build process for reverseproxy project
  - cd udagram-reverseproxy
  - docker build -t udagram-reverseproxy .; cd ../
  - docker tag udagram-reverseproxy "$DOCKER_USERNAME"/udagram-reverseproxy:latest

  - echo build process completed!

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - docker image ls -a
  - docker push "$DOCKER_USERNAME"/udagram-api-frontend:latest
  - docker push "$DOCKER_USERNAME"/udagram-api-users:latest
  - docker push "$DOCKER_USERNAME"/udagram-api-feeds:latest
  - docker push "$DOCKER_USERNAME"/udagram-reverseproxy:latest